from aiogram.fsm.context import FSMContext
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from src.common.states import SupportState
from src.common import keyboard as kb

router = Router()


@router.message(Command("start"))
async def start(message: Message, state: FSMContext):
    simple_kb = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text='–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏')]],
        resize_keyboard=True
    )
    # --- Inline keyboard for the web-app button ---
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text='–û—Ç–∫—Ä—ã—Ç—å PostLink',
            web_app={'url': 'https://backend.sdutalks.kz'}
        )
    )
    inline_kb = builder.as_markup()
    # ---------------------------------------------
    welcome_message = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>PostLink</b> üëã\n\n"
        "PostLink ‚Äî —ç—Ç–æ —Å–µ—Ä–≤–∏—Å, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–µ–¥–∏–Ω—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤.\n"
        "üì¶ <b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é</b> ‚Äî –±—ã—Å—Ç—Ä—ã–π –∏ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ—Å—ã–ª–∫—É.\n"
        "‚úàÔ∏è <b>–ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫—É</b> ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –≤ –ø—É—Ç–∏.\n\n"
        "<blockquote><b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n"
        "1Ô∏è‚É£ –í—ã–±–∏—Ä–∞–µ—à—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ\n"
        "2Ô∏è‚É£ –°–æ–∑–¥–∞—ë—à—å –∑–∞—è–≤–∫—É –∏–ª–∏ –æ—Ç–∫–ª–∏–∫–∞–µ—à—å—Å—è –Ω–∞ —á—É–∂—É—é\n"
        "3Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ—à—å –æ—Ç–∫–ª–∏–∫ –∏ –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ—à—å—Å—è –≤ —á–∞—Ç–µ</blockquote>\n\n"
        "üöÄ –í—Å—ë –ø—Ä–æ—Å—Ç–æ: –æ—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä—å –≤—Å—ë —Å–∞–º üëáüèª"
    )

    await message.answer(welcome_message, reply_markup=simple_kb, parse_mode="HTML")
    await message.answer(
        "üëÜüèª –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å PostLink:",
        reply_markup=inline_kb           # InlineKeyboardMarkup
    )



@router.message(Command("support"))
@router.message(F.text.in_(['–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏', '—Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏', '–°–õ–£–ñ–ë–ê –ü–û–î–î–ï–†–ñ–ö–ò']))
async def handle_support(message: Message, state: FSMContext):
    print(f"Support handler triggered by: '{message.text}' from user {message.from_user.id}")
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ PostLink.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∏ –º—ã —Å–¥–µ–ª–∞–µ–º –≤—Å–µ, —á—Ç–æ –≤ –Ω–∞—à–∏—Ö —Å–∏–ª–∞—Ö!',
        reply_markup=ReplyKeyboardRemove())
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ, –∫—Ç–æ –í—ã —Å–µ–π—á–∞—Å‚¨áÔ∏è', reply_markup=kb.user_type_reply_mu)
    await state.set_state(SupportState.user_type)

@router.callback_query(F.data == 'support_start')
async def handle_support_callback(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.answer(
        '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ PostLink.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∏ –º—ã —Å–¥–µ–ª–∞–µ–º –≤—Å–µ, —á—Ç–æ –≤ –Ω–∞—à–∏—Ö —Å–∏–ª–∞—Ö!',
        reply_markup=ReplyKeyboardRemove())
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ, –∫—Ç–æ –í—ã —Å–µ–π—á–∞—Å‚¨áÔ∏è', reply_markup=kb.user_type_reply_mu)
    await state.set_state(SupportState.user_type)

@router.message(F.web_app_data)
async def handle_web_app_data(message: Message, state: FSMContext):
    try:
        import json
        data = json.loads(message.web_app_data.data)
        
        if data.get('action') == 'support_request':
            await handle_support(message, state)
        
    except Exception as e:
        print(f"Error handling web app data: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")
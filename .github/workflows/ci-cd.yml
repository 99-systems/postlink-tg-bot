name: CI/CD

on:
  push:
    branches:
      - dev

  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (must be "master")'
        required: true
        default: master

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      BRANCH: ${{ github.ref_name != '' && github.ref_name || github.event.inputs.environment }}
      IMAGE_ID: ghcr.io/${{ github.repository }}-${{ github.ref_name != '' && github.ref_name || github.event.inputs.environment }}:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker image to GHCR
        run: |
          docker build -t $IMAGE_ID .
          docker push $IMAGE_ID

      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            CONTAINER_NAME=tg-postlink-bot-${BRANCH}

            docker login ghcr.io -u ${{ github.actor }} --password-stdin <<< "${{ secrets.GITHUB_TOKEN }}"
            docker pull $IMAGE_ID
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true

            if [ "$BRANCH" = "master" ]; then
              BOT_TOKEN=${{ secrets.PROD_BOT_TOKEN }}
              DB_NAME=${{ secrets.PROD_DB_NAME }}
              DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}
              MONGO_DB_NAME=${{ secrets.PROD_MONGO_DB_NAME }}
              MONGO_PASSWORD=${{ secrets.PROD_MONGO_PASSWORD }}
              DEBUG="False"
            else
              BOT_TOKEN=${{ secrets.DEV_BOT_TOKEN }}
              DB_NAME=${{ secrets.DEV_DB_NAME }}
              DB_PASSWORD=${{ secrets.DEV_DB_PASSWORD }}
              MONGO_DB_NAME=${{ secrets.DEV_MONGO_DB_NAME }}
              MONGO_PASSWORD=${{ secrets.DEV_MONGO_PASSWORD }}
              DEBUG="True"
            fi

            docker run -d \
              --name $CONTAINER_NAME \
              --restart unless-stopped \
              --network host \
              -e BOT_TOKEN="$BOT_TOKEN" \
              -e DB_NAME="$DB_NAME" \
              -e DB_HOST="${{ secrets.DB_HOST }}" \
              -e DB_PORT="${{ secrets.DB_PORT }}" \
              -e DB_USER="${{ secrets.DB_USER }}" \
              -e DB_PASSWORD="$DB_PASSWORD" \
              -e NOMINATIM_API_URL="${{ secrets.NOMINATIM_API_URL }}" \
              -e SUPPORT_CHANNEL_CHAT_ID="${{ secrets.SUPPORT_CHANNEL_CHAT_ID }}" \
              -e REQUESTS_CHAT_ID="${{ secrets.REQUESTS_CHAT_ID }}" \
              -e MONGO_USER="${{ secrets.MONGO_USER }}" \
              -e MONGO_DB_NAME="$MONGO_DB_NAME" \
              -e MONGO_PASSWORD="$MONGO_PASSWORD" \
              -e MONGO_HOST="${{ secrets.MONGO_HOST }}" \
              -e GOOGLE_SHEETS_API_KEY="${{ secrets.GOOGLE_SHEETS_API_KEY }}" \
              -e SERVICE_ACCOUNT_CREDS='${{ secrets.SERVICE_ACCOUNT_CREDS_JSON }}' \
              -e DEBUG="$DEBUG" \
              $IMAGE_ID
